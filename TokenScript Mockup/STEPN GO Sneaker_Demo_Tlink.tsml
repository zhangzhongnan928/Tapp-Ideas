<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token xmlns:ts="http://tokenscript.org/2024/01/tokenscript"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:ethereum="urn:ethereum:constantinople"
          xsi:schemaLocation="http://tokenscript.org/2024/01/tokenscript https://www.tokenscript.org/schemas/2024-01/tokenscript.xsd"
          name="STEPNGOSneaker">
    <ts:label>
        <ts:plurals xml:lang="en">
            <ts:string quantity="one">STEPN GO Sneaker</ts:string>
            <ts:string quantity="other">STEPN GO Sneakers</ts:string>
        </ts:plurals>
    </ts:label>
    <ts:meta>
        <ts:description xml:lang="en">STEPN GO Sneaker - Move, Earn, and Share!</ts:description>
        <ts:aboutUrl xml:lang="en">https://stepn.com/</ts:aboutUrl>
        <ts:iconUrl xml:lang="en">https://stepn.com/icon.png</ts:iconUrl>
    </ts:meta>

    <ts:contract interface="erc721" name="STEPNGOSneakerContract">
        <ts:address network="137">0x483EA031160638Ae54a036ac589D9Eb31c121A8C</ts:address>
    </ts:contract>

    <ts:origins>
        <ts:ethereum contract="STEPNGOSneakerContract"/>
    </ts:origins>

    <ts:attribute name="tokenId">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax>
        </ts:type>
        <ts:origins>
            <ethereum:call function="tokenOfOwnerByIndex" contract="STEPNGOSneakerContract" as="uint256">
                <ethereum:parameter name="owner" ref="ownerAddress"/>
                <ethereum:parameter name="index">0</ethereum:parameter>
            </ethereum:call>
        </ts:origins>
    </ts:attribute>

    <!-- Buy Card -->
    <ts:card type="action" name="Buy" origins="STEPNGOSneakerContract">
        <ts:label>
            <ts:string xml:lang="en">Buy STEPN GO Sneaker</ts:string>
        </ts:label>
        <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
            <style type="text/css">.button { /* styles */ }</style>
            <div>
                <button class="button" onclick="buySneaker()">Buy Sneaker</button>
            </div>
            <script type="text/javascript">
                function buySneaker() {
                    tokenscript.action.executeTransaction({ txName: "buySneaker" });
                }
            </script>
        </ts:view>
    </ts:card>

    <!-- Make an Offer Card -->
    <ts:card type="action" name="MakeOffer" origins="STEPNGOSneakerContract">
        <ts:label>
            <ts:string xml:lang="en">Make an Offer</ts:string>
        </ts:label>
        <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
            <style type="text/css">.button { /* styles */ }</style>
            <div>
                <input type="number" id="offerAmount" placeholder="Enter offer amount" />
                <button class="button" onclick="makeOffer()">Make Offer</button>
            </div>
            <script type="text/javascript">
                function makeOffer() {
                    const amount = document.getElementById('offerAmount').value;
                    tokenscript.action.executeTransaction({ txName: "makeOffer", params: { amount: amount } });
                }
            </script>
        </ts:view>
    </ts:card>

    <!-- Share Card -->
    <ts:card type="action" name="Share" origins="STEPNGOSneakerContract">
        <ts:label>
            <ts:string xml:lang="en">Share Sneaker</ts:string>
        </ts:label>
        <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
            <style type="text/css">.button { /* styles */ }</style>
            <div>
                <button class="button" onclick="shareSneaker()">Share Sneaker</button>
            </div>
            <script type="text/javascript">
                function shareSneaker() {
                    var tlink = "https://viewer.tokenscript.org/?chain=137&contract=0x483EA031160638Ae54a036ac589D9Eb31c121A8C&tokenId=" + window.tokenId;
                    tokenscript.share.share({ message: "Check out my STEPN GO Sneaker!", url: tlink });
                }
            </script>
        </ts:view>
    </ts:card>

    <ts:transaction name="buySneaker">
        <ts:contract>STEPNGOSneakerContract</ts:contract>
        <ts:function>buy</ts:function>
    </ts:transaction>

    <ts:transaction name="makeOffer">
        <ts:contract>STEPNGOSneakerContract</ts:contract>
        <ts:function>makeOffer</ts:function>
        <ts:parameter name="amount" ref="amount"/>
        <ts:parameter name="tokenId" ref="tokenId"/>
    </ts:transaction>

    <ts:script>
    <![CDATA[
    tokenscript.tokens.dataChanged = async (oldTokens, updatedTokens) => {
        console.log("TokenScript data changed", updatedTokens);
        if (updatedTokens.currentInstance) {
            window.tokenId = updatedTokens.currentInstance.tokenId;
        }
    };
    ]]>
    </ts:script>
</ts:token>
